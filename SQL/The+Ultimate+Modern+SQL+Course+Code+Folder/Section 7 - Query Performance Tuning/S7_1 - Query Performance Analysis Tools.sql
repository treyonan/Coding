USE ROLE SYSADMIN;
USE WAREHOUSE XSMALL_WAREHOUSE;
USE SCHEMA SNOWFLAKE_SAMPLE_DATA.TPCH_SF1;

SELECT
    C.C_CUSTKEY,
    C.C_NAME,
    SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS TOTAL_REVENUE
FROM
    CUSTOMER C
INNER JOIN
    ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY
INNER JOIN
    LINEITEM L ON O.O_ORDERKEY = L.L_ORDERKEY
WHERE
    O.O_ORDERDATE >= '1995-01-01'
    AND O.O_ORDERDATE < '1996-01-01'
GROUP BY
    C.C_CUSTKEY,
    C.C_NAME
HAVING
    TOTAL_REVENUE > 1000000
ORDER BY
    TOTAL_REVENUE DESC;

-- EXPLAIN: Returns the logical execution plan for the specified SQL statement.
EXPLAIN 
SELECT
    C.C_CUSTKEY,
    C.C_NAME,
    SUM(L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT)) AS TOTAL_REVENUE
FROM
    CUSTOMER C
INNER JOIN
    ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY
INNER JOIN
    LINEITEM L ON O.O_ORDERKEY = L.L_ORDERKEY
WHERE
    O.O_ORDERDATE >= '1995-01-01'
    AND O.O_ORDERDATE < '1996-01-01'
GROUP BY
    C.C_CUSTKEY,
    C.C_NAME
HAVING
    TOTAL_REVENUE > 1000000
ORDER BY
    TOTAL_REVENUE DESC;


-- Account Usage Views and Table Functions
USE ROLE ACCOUNTADMIN;

SELECT 
    *
FROM
    SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY
WHERE 
    SCHEMA_NAME = 'TPCH_SF1'
ORDER BY 
    START_TIME DESC;

-- Top 10 Longest Running Statements
SELECT
    QUERY_TEXT,
    DATEDIFF('second', START_TIME, END_TIME) AS DURATION_SECONDS,
    DATABASE_NAME,
    SCHEMA_NAME,
    USER_NAME,
    WAREHOUSE_NAME,
    START_TIME,
    END_TIME 
FROM
    SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY
ORDER BY
    DURATION_SECONDS DESC
LIMIT 10;
    
    
    