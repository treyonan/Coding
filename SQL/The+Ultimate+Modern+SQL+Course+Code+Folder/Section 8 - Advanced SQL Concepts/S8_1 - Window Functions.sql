USE ROLE SYSADMIN;
USE SCHEMA UK_ROWLEVEL_TRANSACTION_DATA__SAMPLE.PUBLIC_LISTING;
USE WAREHOUSE XSMALL_WAREHOUSE;

SELECT * FROM TRANSACTIONS LIMIT 10;

-- 1. "What is the average sale amount for each user?"
SELECT 
    SUBSTR(USER_REFERENCE, 1, 10) AS USER_REF_SHORT, 
    TRANSACTION_DATE, 
    AMOUNT, 
    AVG(AMOUNT) OVER (PARTITION BY USER_REFERENCE) AS AVG_TRANSACTIONS_AMOUNT
FROM
    TRANSACTIONS
ORDER BY USER_REFERENCE, TRANSACTION_DATE;

-- 2. "What is the total sale amount for each combination of customer and merchant and what is the proportion of each sale?"
SELECT 
    SUBSTR(USER_REFERENCE, 1, 10) AS USER_REF_SHORT, 
    MERCHANT_NAME,
    AMOUNT, 
    SUM(AMOUNT) OVER (PARTITION BY USER_REFERENCE, MERCHANT_NAME) AS TOTAL_TRANSACTIONS_AMOUNT
FROM
    TRANSACTIONS
ORDER BY 
    USER_REFERENCE, 
    MERCHANT_NAME;

-- 3. "What are the 3 highest spending months for the year 2022?"
SELECT
    MONTHNAME(TRANSACTION_DATE) AS TRANSACTION_MONTH,
    SUM(AMOUNT) AS TOTAL_AMOUNT,
    RANK() OVER (ORDER BY SUM(AMOUNT) DESC) AS MONTHLY_SALE_AMOUNT_RANKING
FROM    
    TRANSACTIONS
WHERE 
    YEAR(TRANSACTION_DATE) = 2022
GROUP BY 
    TRANSACTION_MONTH
ORDER BY 
    MONTHLY_SALE_AMOUNT_RANKING
LIMIT 
    3;

-- 4. "What percentage is each transaction amount of the daily total?"
SELECT 
    SUBSTR(TRANSACTION_REFERENCE, 1, 8) AS TRANSACTION_REF_SHORT, 
    TRANSACTION_DATE,
    AMOUNT,
    AMOUNT / SUM(AMOUNT) OVER (PARTITION BY TRANSACTION_DATE) * 100 AS PERCENTAGE_AMOUNT
FROM 
    TRANSACTIONS
ORDER BY 
    TRANSACTION_DATE;
    
SELECT 
    SUBSTR(TRANSACTION_REFERENCE, 1, 8) AS TRANSACTION_REF_SHORT, 
    TRANSACTION_DATE,
    AMOUNT,
    AMOUNT / SUM(AMOUNT) OVER (PARTITION BY TRANSACTION_DATE) * 100 AS PERCENTAGE_AMOUNT
FROM 
    TRANSACTIONS
QUALIFY PERCENTAGE_AMOUNT > 20
ORDER BY 
    TRANSACTION_DATE;

-- 5. "Show a 7-day moving average of transaction amounts resetting for each month"
SELECT
    MONTH(TRANSACTION_DATE) AS TRANSACTION_MONTH,
    DAY(TRANSACTION_DATE) AS TRANSACTION_DAY,
    SUM(AMOUNT) AS TOTAL_AMOUNT,
    AVG(SUM(AMOUNT)) OVER (PARTITION BY MONTH(TRANSACTION_DATE) ORDER BY DAY(TRANSACTION_DATE) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS SLIDING_AVG_AMOUNT
FROM    
    TRANSACTIONS
GROUP BY 
    TRANSACTION_MONTH, TRANSACTION_DAY
ORDER BY
    TRANSACTION_MONTH, TRANSACTION_DAY;
